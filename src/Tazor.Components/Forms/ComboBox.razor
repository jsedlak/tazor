@typeparam TItem
@inherits TazorBaseComponent
<ClickContainer 
    OnClickedOutside=@HandleClickedOutside>
    @{
        var cbTheme = Theme.Forms.ComboBox;
    }
    <div 
        class=@cbTheme.Wrapper
        @onclick=@(() => { _isEditorVisible = true; StateHasChanged(); })>
        @if (!_isEditorVisible)
        {
            <div class=@cbTheme.ViewContainer>
                @if (SelectedItems.Any())
                {
                    <ul class=@cbTheme.ViewList>
                        @foreach (var item in SelectedItems)
                        {
                            <li class=@cbTheme.ViewListItem>
                                @if (ViewTemplate == null)
                                {
                                    @item?.ToString()
                                }
                                else
                                {
                                    @(ViewTemplate(item))
                                }
                            </li>
                        }
                    </ul>
                }
            </div>
        }
        else 
        {
            <div class=@cbTheme.InputContainer>
                <input 
                    class=@cbTheme.Input
                    type="text" 
                    value=@SearchText 
                    @ref=@_textboxReference
                    @oninput=@OnInputChanged
                    @onkeydown=@OnKeyDown
                />
                <a 
                    class=@cbTheme.DropdownButton
                    @onclick=@HandleDropDownClicked>
                    @if(_isDropdownVisible) 
                    {
                        @HeroIcons.ChevronUp(cbTheme.DropdownButtonIcon)
                    }
                    else 
                    {
                        @HeroIcons.ChevronDown(cbTheme.DropdownButtonIcon)
                    }
                </a>
            </div>
        }
    
        @if(_isDropdownVisible) 
        {
            <div class=@cbTheme.DropdownContainer>
                <ul class=@cbTheme.DropdownList>
                @foreach(var item in _items.Union(SelectedItems))
                {
                    <li class=@cbTheme.DropdownItem>
                        @if(MultiSelect)
                        {
                            <input
                                class=@cbTheme.DropdownCheckbox
                                type="checkbox" 
                                checked=@(SelectedItems.Contains(item)) 
                                onchange=@(async () => await OnCheckChange(item)) 
                            />
                        }

                        <div class=@cbTheme.DropdownItemContent>
                            @if(ResultTemplate == null)
                            {
                                @item?.ToString()
                            }
                            else
                            {
                                @(ResultTemplate(item))
                            }
                        </div>
                    </li>
                }
                </ul>
            </div>
        }
    </div>
</ClickContainer>