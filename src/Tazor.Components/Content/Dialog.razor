@inject IThemeManager Theme
@if (IsVisible)
{
    <div class="relative z-10" aria-labelledby="modal-title" role="dialog" aria-modal="true">
        <div class=@Theme.Current.Dialog.Overlay></div>
        <div class="fixed inset-0 z-10 overflow-y-auto">
            <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
                <div class=@Theme.Current.Dialog.Window>
                    <div class=@Theme.Current.Dialog.WindowInner>
                        <header class=@Theme.Current.Dialog.Header>
                            @if (Header != null)
                            {
                                @Header
                            }
                            else if (!string.IsNullOrWhiteSpace(Title))
                            {
                                <div class="flex items-center justify-between">
                                    <div>
                                        <h3>@Title</h3>
                                    </div>

                                    @if (!HideCloseButton)
                                    {
                                        <div>
                                            <a @onclick="OnCloseRequested" class="cursor-pointer opacity-75">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                                                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                                                </svg>
                                            </a>
                                        </div>
                                    }
                                </div>
                            }

                        </header>
                        <div class=@Theme.Current.Dialog.Content>
                            @Content
                        </div>
                        <footer class=@Theme.Current.Dialog.Footer>
                            @Footer
                        </footer>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@code {
    [Parameter]
    public bool IsVisible { get; set; } = false;

    [Parameter]
    public EventCallback<bool> IsVisibleChanged { get; set; }

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public RenderFragment? Header { get; set; }

    [Parameter]
    public RenderFragment Content { get; set; } = null!;

    [Parameter]
    public RenderFragment Footer { get; set; } = null!;

    [Parameter]
    public bool HideCloseButton { get; set; } = false;

    private async Task OnCloseRequested()
    {
        IsVisible = false;
        await IsVisibleChanged.InvokeAsync(false);
    }
}
