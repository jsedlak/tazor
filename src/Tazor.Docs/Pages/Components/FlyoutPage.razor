@page "/components/flyout"
@inject IThemeManager Theme
<PageTitle>Flyout - Tazor Docs</PageTitle>

<PageHead Title="Flyout" />

<p class="leading-loose mb-4">The Flyout is an alternative to the Dialog component, offering an overlayed panel attached to one of the screen borders instead of floating in the middle of the window.</p>

<TabNav Items=_exampleNavItems @bind-SelectedItem=_selectedExampleNavItem />
@if (_selectedExampleNavItem?.Key == "demo")
{
    <select @onchange=HandlePanelPlacementChanged class=@Theme.Current.Forms.SelectInput>
        @foreach(var val in Enum.GetValues(typeof(PanelPlacement)))
        {
            <option selected=@((PanelPlacement)val == _selectedPlacement) value=@val>@Enum.GetName(typeof(PanelPlacement), val)</option>
        }
    </select>
    <Button Clicked=@(() => { _isFlyoutOpen = true; StateHasChanged(); })>Open Flyout</Button>
    <Flyout Placement=_selectedPlacement Title="Test Flyout" @bind-IsVisible=_isFlyoutOpen>
        <Content>
            <p>This is test content!</p>
        </Content>
    </Flyout>
}
else {
<CodeBlock Code=@Resources.Examples_Flyout />
}

@code {
    private bool _isFlyoutOpen;
    private PanelPlacement _selectedPlacement = PanelPlacement.Left;

    private NavItem? _selectedExampleNavItem;
    private IEnumerable<NavItem> _exampleNavItems = new[]
    {
        new NavItem("Demo"),
        new NavItem("Code")
    };

    private void HandlePanelPlacementChanged(ChangeEventArgs args)
    {
        _selectedPlacement = (PanelPlacement)Enum.Parse(typeof(PanelPlacement), args.Value.ToString());
        StateHasChanged();
    }
}
