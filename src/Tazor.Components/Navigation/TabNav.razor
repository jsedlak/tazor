@inject IThemeManager Theme
@inject NavigationManager Navigation
<div class=@Theme.Current.TabNav.Wrapper>
    @foreach (var item in Items)
    {
        var itemClass = item == SelectedItem ? Theme.Current.TabNav.SelectedItem : Theme.Current.TabNav.Item;
        var linkClass = item == SelectedItem ? Theme.Current.TabNav.SelectedLink : Theme.Current.TabNav.Link;

        <div class=@itemClass>
            <a class=@linkClass @onclick=@(async () => await HandleTabClicked(item))>
                @item.LeftIcon
                @item.Text
                @item.RightIcon
            </a>
        </div>
    }
</div>
@code {
    [Parameter]
    public IEnumerable<NavItem> Items { get; set; } = Enumerable.Empty<NavItem>();

    [Parameter]
    public NavItem? SelectedItem { get; set; }

    [Parameter]
    public EventCallback<NavItem> SelectedItemChanged { get; set; }

    private async Task HandleTabClicked(NavItem item)
    {
        if (SelectedItem == item)
        {
            return;
        }

        SelectedItem = item;
        await SelectedItemChanged.InvokeAsync(item);
    }

    protected override async Task OnInitializedAsync()
    {
        if (Items.Any())
        {
            await HandleTabClicked(Items.First());
        }
    }
}
